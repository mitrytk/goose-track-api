{
  "openapi": "3.0.3",
  "info": {
    "version": "0.1.0",
    "title": "GooseTrack",
    "description": "Time management To-do app"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://goose-track-api-l50t.onrender.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    { "name": "Auth", "description": "Authorization endpoints" },
    { "name": "Tasks", "description": "Tasks data endpoints" },
    { "name": "Reviews", "description": "Reviews endpoints" },
    { "name": "Statistics", "description": "Statistics endpoints" }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signup",
        "parameters": [],
        "requestBody": {
          "description": "Register object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "User login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Access errors (authorization or token verification)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update current user info",
        "parameters": [],
        "requestBody": {
          "description": "User parameters object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/toggle-theme": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Switch app color theme",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Toggle-theme response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all personal tasks",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get tasks response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create new task",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create task Request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create task response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/month/{:yyyy-:mm}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all task for chosen month",
        "parameters": [
          {
            "in": "path",
            "name": ":year-:month",
            "required": true,
            "type": "string",
            "description": "Tasks for the month",
            "example": "2023-06"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get tasks response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/tasks/{taskId}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get chosen task",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string",
            "description": "Task's id",
            "example": "64a45c827e369c91237ba2f5"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get task response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update chosen task",
        "parameters": [{
          "in": "path",
          "name": "taskId",
          "required": true,
          "type": "string",
          "description": "Task's id",
          "example": "64a45c827e369c91237ba2f5"
        }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Task object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update task Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Update task response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete chosen task",
        "parameters": [{
          "in": "path",
          "name": "taskId",
          "required": true,
          "type": "string",
          "description": "Task's id",
          "example": "64a45c827e369c91237ba2f5"
        }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/reviews": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all reviews",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get reviews response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Reviews"],
        "summary": "Create review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "required": true,
        "requestBody": {
          "description": "Review object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create review request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create review response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reviews/{id}": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get chosen review",
        "security": [{ "Bearer": [] }],
        "parameters": [{
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string",
          "description": "Review's Id",
          "example": "6499bcf35fdfb7e0370174f6"
        }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Reviews"],
        "summary": "Update review",
        "parameters": [{
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string",
          "description": "Review's Id",
          "example": "6499bcf35fdfb7e0370174f6"
        }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Review object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update review request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Reviews"],
        "summary": "Delete chosen review",
        "parameters": [{
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string",
          "description": "Review's Id",
          "example": "6499bcf35fdfb7e0370174f6"
        }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/statistics": {
      "post": {
        "tags": ["Statistics"],
        "summary": "Get statistics for chosen date",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "required": true,
        "requestBody": {
          "description": "Statistics object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Get statistics request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get statistics response"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "maxLength": 30,
            "example": "Michael Townley"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 6,
            "example": "qwerty123"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 6,
            "example": "qwerty123"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "file"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "maxLength": 30,
            "example": "Michael Townley"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday date",
            "minLength": 10,
            "maxLength": 10
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "minLength": 10,
            "example": "890 123 4566"
          },
          "skype": {
            "type": "string",
            "description": "User's Skype link",
            "minLength": 3,
            "example": "SkypeName"
          }
        }
      },

      "Create task Request": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Task`s name",
            "maxLength": 250,
            "example": "Go IT"
          },
          "start": {
            "type": "string",
            "description": "Task`s start time",
            "pattern": "/^([0-9]{2}):([0-9]{2})$/",
            "example": "13:37"
          },
          "end": {
            "type": "string",
            "description": "Task`s end time",
            "pattern": "/^([0-9]{2}):([0-9]{2})$/",
            "example": "13:57"
          },
          "priority": {
            "type": "string",
            "description": "Task`s priority",
            "example": "low"
          },
          "date": {
            "type": "string",
            "description": "Task`s event date",
            "example": "2023-06-27"
          },
          "category": {
            "type": "string",
            "description": "Task`s category",
            "example": "to-do"
          }
        }
      },
      "Update task Request": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task`s name",
            "maxLength": 250,
            "example": "GoIT"
          },
          "start": {
            "type": "string",
            "description": "Task`s start time",
            "pattern": "/^([0-9]{2}):([0-9]{2})$/",
            "example": "13:37"
          },
          "end": {
            "type": "string",
            "description": "Task`s end time",
            "pattern": "/^([0-9]{2}):([0-9]{2})$/",
            "example": "13:47"
          },
          "priority": {
            "type": "string",
            "description": "Task`s priority",
            "example": "medium"
          },
          "date": {
            "type": "string",
            "description": "Task`s event date",
            "example": "2023-06-27"
          },
          "category": {
            "type": "string",
            "description": "Task`s category",
            "example": "done"
          }
        }
      },

      "Create review request": {
        "type": "object",
        "required": ["rating", "review"],
        "properties": {
          "rating": {
            "type": "number",
            "description": "Number of stars",
            "example": 5
          },
          "review": {
            "type": "string",
            "description": "Review`s text",
            "minLength": 10,
            "maxLength": 300,
            "example": "Great app for great people"
          }
        }
      },

      "Update review request": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "description": "Number of stars",
            "example": 5
          },
          "review": {
            "type": "string",
            "description": "Review`s text",
            "minLength": 10,
            "maxLength": 300,
            "example": "Great app for great people"
          }
        }
      },

      "Get statistics request": {
        "type": "object",
        "required": ["date"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Date for statistics to get",
            "example": "2023-06-27"
          }
        }
      },

      "RegisterResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Backend access token"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "username": {
                "type": "string",
                "description": "User's name",
                "example": "Michael Townley"
              },
              "birthday": {
                "type": "string",
                "description": "User`s birthday",
                "example": "0000-01-01T00:00:00.000Z"
              },
              "phone": {
                "type": "string",
                "description": "User`s phone number",
                "example": " "
              },
              "skype": {
                "type": "string",
                "description": "User`s Skype link",
                "example": " "
              },
              "avatarURL": {
                "type": "string",
                "description": "User`s avatar",
                "example": " "
              },
              "ThemeInterface": {
                "type": "string",
                "description": "App`s theme color",
                "example": "light"
              }
            }
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Backend access token"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "username": {
                "type": "string",
                "description": "User's name",
                "example": "Michael Townley"
              },
              "birthday": {
                "type": "string",
                "description": "User`s birthday",
                "example": "0000-01-01T00:00:00.000Z"
              },
              "phone": {
                "type": "string",
                "description": "User`s phone number",
                "example": " "
              },
              "skype": {
                "type": "string",
                "description": "User`s Skype link",
                "example": " "
              },
              "avatarURL": {
                "type": "string",
                "description": "User`s avatar",
                "example": " "
              },
              "ThemeInterface": {
                "type": "string",
                "description": "App`s theme color",
                "example": "light"
              }
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "Michael Townley"
          },
          "birthday": {
            "type": "string",
            "description": "User`s birthday",
            "example": "0000-01-01T00:00:00.000Z"
          },
          "phone": {
            "type": "string",
            "description": "User`s phone number",
            "example": " "
          },
          "skype": {
            "type": "string",
            "description": "User`s Skype link",
            "example": " "
          },
          "avatarURL": {
            "type": "string",
            "description": "User`s avatar",
            "example": " "
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "Michael DeSanta"
          },
          "birthday": {
            "type": "string",
            "description": "User`s birthday",
            "example": "0000-01-01T00:00:00.000Z"
          },
          "phone": {
            "type": "string",
            "description": "User`s phone number",
            "example": " "
          },
          "skype": {
            "type": "string",
            "description": "User`s Skype link",
            "example": " "
          },
          "avatarURL": {
            "type": "string",
            "description": "User`s avatar",
            "example": "avatar.url"
          }
        }
      },
      "Toggle-theme response": {
        "type": "object",
        "properties": {
          "themeInterface": {
            "type": "string",
            "description": "Chosen color theme",
            "example": "light"
          }
        }
      },

      "Get task response": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Task`s Id",
            "example": "6496ccb6c061590d05b73c07"
          },
          "title": {
            "type": "string",
            "description": "Task`s name",
            "maxLength": 250,
            "example": "Got IT"
          },
          "start": {
            "type": "string",
            "description": "Task`s start time",
            "pattern": "/^([0-9]{2}):([0-9]{2})$/",
            "example": "13:37"
          },
          "end": {
            "type": "string",
            "description": "Task`s end time",
            "pattern": "/^([0-9]{2}):([0-9]{2})$/",
            "example": "13:37"
          },
          "priority": {
            "type": "string",
            "description": "Task`s priority",
            "example": "low"
          },
          "date": {
            "type": "string",
            "description": "Task`s event date",
            "example": "2023-06-27"
          },
          "category": {
            "type": "string",
            "description": "Task`s category",
            "example": "to-do"
          },
          "owner": {
            "type": "string",
            "description": "Task owner`s Id",
            "example": "6496ccb6c061590d05b73c07"
          }
        }
      },

      "Get tasks response": {
        "type": "array",
        "description": "Array of all tasks",
        "items": {
          "$ref": "#/components/schemas/Get task response"
        }
      },
      "Create task response": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task`s name",
            "maxLength": 250,
            "example": "Go IT"
          },
          "start": {
            "type": "string",
            "description": "Task`s start time",
            "pattern": "/^([0-9]{2}):([0-9]{2})$/",
            "example": "13:37"
          },
          "end": {
            "type": "string",
            "description": "Task`s end time",
            "pattern": "/^([0-9]{2}):([0-9]{2})$/",
            "example": "13:37"
          },
          "priority": {
            "type": "string",
            "description": "Task`s priority",
            "example": "low"
          },
          "date": {
            "type": "string",
            "description": "Task`s event date",
            "example": "2023-06-27"
          },
          "category": {
            "type": "string",
            "description": "Task`s category",
            "example": "to-do"
          },
          "owner": {
            "type": "string",
            "description": "Task owner`s Id",
            "example": "6496ccb6c061590d05b73c07"
          },
          "_id": {
            "type": "string",
            "description": "Task`s Id",
            "example": "6496ccb6c061590d05b73c07"
          }
        }
      },
      "Update task response": {
        "type": "object",
        "properties": {
          "$ref": "#/components/schemas/Get task response"
        }
      },

      "Create review response": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Reviewer`s name",
                "example": "Michael DeSanta"
              },
              "avatarURL": {
                "type": "string",
                "description": "Reviewer`s name",
                "example": "avatar.url"
              },
              "id": {
                "type": "string",
                "description": "User`s Id",
                "example": "dddddddddddddddddddddddddddddddd"
              }
            }
          },
          "rating": {
            "type": "number",
            "description": "Number of stars",
            "example": 5
          },
          "review": {
            "type": "string",
            "description": "Review`s text",
            "example": "Great app for great people"
          },
          "_id": {
            "type": "string",
            "description": "Review`s Id",
            "example": "dddddddddddddddddddddddddddddddd"
          }
        }
      },
      "Review response": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Reviewer`s name",
                "example": "Michael DeSanta"
              },
              "avatarURL": {
                "type": "string",
                "description": "Reviewer`s name",
                "example": "avatar.url"
              },
              "id": {
                "type": "string",
                "description": "User`s Id",
                "example": "dddddddddddddddddddddddddddddddd"
              }
            }
          },
          "rating": {
            "type": "number",
            "description": "Number of stars",
            "example": 5
          },
          "review": {
            "type": "string",
            "description": "Review`s text",
            "example": "Great app for great people"
          },
          "_id": {
            "type": "string",
            "description": "Review`s Id",
            "example": "dddddddddddddddddddddddddddddddd"
          }
        }
      },

      "Get reviews response": {
        "type": "array",
        "description": "Array of all reviews",
        "items": {
          "$ref": "#/components/schemas/Review response"
        }
      },

      "Get statistics response": {
        "type": "object",
        "properties": {
          "month": {
            "type": "object",
            "properties": {
              "tasksQuantity": {
                "type": "number",
                "description": "General quantity of tasks per chosen month",
                "example": 10
              },
              "toDoByMonthInPercent": {
                "type": "number",
                "description": "Percent of tasks in 'to-do' category per chosen month",
                "example": 0.3
              },
              "inProgressByMonthInPercent": {
                "type": "number",
                "description": "Percent of tasks in 'in-progress' category per chosen month",
                "example": 0.2
              },
              "doneByMonthInPercent": {
                "type": "number",
                "description": "Percent of tasks in 'done' category per chosen month",
                "example": 0.2
              }
            }
          },
          "day": {
            "type": "object",
            "properties": {
              "tasksQuantity": {
                "type": "number",
                "description": "General quantity of tasks per chosen day",
                "example": 4
              },
              "toDoByMonthInPercent": {
                "type": "number",
                "description": "Percent of tasks in 'to-do' category per chosen day",
                "example": 0.5
              },
              "inProgressByMonthInPercent": {
                "type": "number",
                "description": "Percent of tasks in 'in-progress' category per chosen day",
                "example": 0.25
              },
              "doneByMonthInPercent": {
                "type": "number",
                "description": "Percent of tasks in 'done' category per chosen day",
                "example": 0.25
              }
            }
          }
        }
      },

      "SuccessMessageResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success notification",
            "example": "User logged out"
          }
        }
      },
      "RegisterErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "Invalid data entered"
          }
        }
      },
      "EmailErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "Email in use"
          }
        }
      },
      "LoginErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "Email or password invalid"
          }
        }
      },
      "AuthErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "Unauthorized"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "Error description"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "BearerFormat": "JWT"
      }
    }
  }
}
